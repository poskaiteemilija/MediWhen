package com.example.emili.mediwhen20;

import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.view.View;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.MenuItem;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;

public class MainList extends AppCompatActivity
        implements NavigationView.OnNavigationItemSelectedListener {

    public static final int RESULT_MV = 1;
    public static int lastId = 0;

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
            updateList();
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_list_main);
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        updateList();
//Generated by android studio upon creating layout, modified:
        FloatingActionButton fab = findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                openAddMedicine();
            }
        });

        DrawerLayout drawer = findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);

        drawer.addDrawerListener(toggle);
        toggle.syncState();

        final NavigationView navigationView = findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);
//ends

    }

//Generated by android studio and modified:
    @Override
    public void onBackPressed() {
        DrawerLayout drawer = findViewById(R.id.drawer_layout);

        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }

    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        int id = item.getItemId();

        if (id == R.id.today) {
            openToday();
        }

        DrawerLayout drawer = findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);
        return true;
    }
//ends

    public void openAddMedicine(){// opens CreateMedicine activity
        Intent intent = new Intent(this, CreateMedicine.class);
        startActivityForResult(intent, RESULT_MV);
    }

    public void openMedicineView(Bundle bundle){// opens MainList activity
        Intent intent2 = new Intent(this, MedicineInfo.class);
        intent2.putExtras(bundle);
        startActivityForResult(intent2, RESULT_MV);
    }

    public void openToday(){// opens TodayMed activity
        Intent intent3 = new Intent(this, TodayMed.class);
        startActivity(intent3);
    }

    public ArrayList<Medicine> readFromFile () {//reads from file "memory", which stores all the data of the user input
        ArrayList<Medicine> medicines = new ArrayList<>();

        try {
//The following code is retrieved and modified from https://www.journaldev.com/9383/android-internal-storage-example-tutorial
            FileInputStream fin = openFileInput("memory");

            int c;
            String temp="";
            while( (c = fin.read()) != -1){//the loop operates when fin has elements to read
                if (c == '\n'){//checks if there is a new line, which will indicate about a new object in the list
                    if (temp.length() > 0){//checks if temp is not empty
                        Medicine newmed = parseLine(temp);//uses method parseLine to convert String values into object type Medicine
                        medicines.add(newmed);
                        lastId = newmed.getId();//gets id for the purposes of removal
                    }
                    temp = "";
                }
                else {//creates string of the whole file "memory"
                    temp = temp + Character.toString((char) c);
                }
            }

            fin.close();
//ends
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        return medicines;
    }

    private Medicine parseLine(String line){//converts a read-from-file line into an object type Medicine
        int first = 0;
        int index = 0;
        String[] params = new String[8];
        for (int i = 0; line.length() > i; i++){
            if (line.charAt(i) == ','){//checks if the separator symbol is met, which is ','
                String variable = line.substring(first, i);
                first = i+1;
                params[index] = variable;
                index++;
            }
        }

        boolean mor = false,
                day = false,
                eve = false;
        //three if statements, which check whether the check boxes are checked
        if (params[2].equals("true")){ mor = true; }
        if (params[3].equals("true")){ day = true; }
        if (params[4].equals("true")){ eve = true; }
        return new Medicine(params[0], params[1], mor, day, eve, Integer.parseInt(params[5]), Integer.parseInt(params[6]), params[7]);
    }

    public  ArrayList <String> namesOfDrugs (ArrayList <Medicine> meds){//creates an ArrayList of drug names, which is used by the ArrayAdapter
        ArrayList <String> names = new ArrayList<>();
        for (int i = 0; meds.size()>i; i++){
            names.add(meds.get(i).getNameOfMed());
        }
        return names;
    }

    public void updateList(){//updates the information in the list upon removing or adding new medicine
        final ArrayList <Medicine> finalList = readFromFile();
        ArrayList <String> namesList = namesOfDrugs(finalList);

//The following code is retrieved and modified from https://stackoverflow.com/questions/5070830/populating-a-listview-using-an-arraylist
        ArrayAdapter <String> array = new ArrayAdapter <String>(this, R.layout.medicine_item_layout_main, R.id.textView, namesList);
        ListView listView = findViewById(R.id.medicineList);
        listView.setAdapter(array);
//ends
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int position, long id) {//transfers data of the clicked object to another activity
                Medicine thismed = finalList.get(position);
//The following code is retrieved and modified from https://stackoverflow.com/questions/14333449/passing-data-through-intent-using-serializable
                Bundle bundle = new Bundle();
                bundle.putSerializable("value", thismed);
                openMedicineView(bundle);
//ends
            }
        });
    }
}
